# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '*.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # preparation (for ci skip)
  prepare:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[ci skip]') || ! contains(github.event.head_commit.message, '[wip]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # このパスは Ubuntu に固有です
          path: ~/.cache/pip
          # 対応する要件ファイルにキャッシュヒットがあるかどうかを確認する
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Lint by flake8
      - name: Lint with flake8
        run: |
          # Python 構文エラーまたは未定義の名前がある場合はビルドを停止する
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zeroはすべてのエラーを警告として扱う。 GitHubのエディタの幅は127文字
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test
        run: |
          pytest

      # Install test
      - name: Install app
        run: python setup.py install

      # Runs application
      - name: Run storybuilder
        run: storybuilder init
